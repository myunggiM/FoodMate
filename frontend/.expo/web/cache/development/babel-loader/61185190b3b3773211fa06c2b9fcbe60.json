{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\featurePJT\\\\subj2\\\\frontend\\\\components\\\\Select.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport PropTypes from 'prop-types';\nimport ModalDropdown from 'react-native-modal-dropdown';\nimport { Block, Text } from 'galio-framework';\nimport Icon from \"./Icon\";\nimport { nowTheme } from \"../constants\";\n\nvar DropDown = function (_React$Component) {\n  _inherits(DropDown, _React$Component);\n\n  var _super = _createSuper(DropDown);\n\n  function DropDown() {\n    var _this;\n\n    _classCallCheck(this, DropDown);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      value: 1\n    };\n\n    _this.handleOnSelect = function (index, value) {\n      var onSelect = _this.props.onSelect;\n\n      _this.setState({\n        value: value\n      });\n\n      onSelect && onSelect(index, value);\n    };\n\n    return _this;\n  }\n\n  _createClass(DropDown, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          onSelect = _this$props.onSelect,\n          iconName = _this$props.iconName,\n          iconFamily = _this$props.iconFamily,\n          iconSize = _this$props.iconSize,\n          iconColor = _this$props.iconColor,\n          color = _this$props.color,\n          textStyle = _this$props.textStyle,\n          style = _this$props.style,\n          props = _objectWithoutProperties(_this$props, [\"onSelect\", \"iconName\", \"iconFamily\", \"iconSize\", \"iconColor\", \"color\", \"textStyle\", \"style\"]);\n\n      var modalStyles = [styles.qty, color && {\n        backgroundColor: color\n      }, style];\n      var textStyles = [styles.text, textStyle];\n      return React.createElement(ModalDropdown, _extends({\n        style: modalStyles,\n        onSelect: this.handleOnSelect,\n        dropdownStyle: styles.dropdown,\n        dropdownTextStyle: {\n          paddingLeft: 16,\n          fontSize: 12\n        }\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 7\n        }\n      }), React.createElement(Block, {\n        flex: true,\n        row: true,\n        middle: true,\n        space: \"between\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        size: 12,\n        style: textStyles,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }\n      }, this.state.value), React.createElement(Icon, {\n        name: iconName || 'minimal-down2x',\n        family: iconFamily || 'NowExtra',\n        size: iconSize || 10,\n        color: iconColor || nowTheme.COLORS.WHITE,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }\n      })));\n    }\n  }]);\n\n  return DropDown;\n}(React.Component);\n\nDropDown.propTypes = {\n  onSelect: PropTypes.func,\n  iconName: PropTypes.string,\n  iconFamily: PropTypes.string,\n  iconSize: PropTypes.number,\n  color: PropTypes.string,\n  textStyle: PropTypes.any\n};\nvar styles = StyleSheet.create({\n  qty: {\n    width: 100,\n    backgroundColor: nowTheme.COLORS.DEFAULT,\n    paddingHorizontal: 16,\n    paddingTop: 10,\n    paddingBottom: 9.5,\n    borderRadius: 4,\n    shadowColor: 'rgba(0, 0, 0, 0.1)',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowRadius: 4,\n    shadowOpacity: 1\n  },\n  text: {\n    color: nowTheme.COLORS.WHITE,\n    fontWeight: '600'\n  },\n  dropdown: {\n    marginTop: 8,\n    marginLeft: -16,\n    width: 100\n  }\n});\nexport default DropDown;","map":{"version":3,"sources":["D:/featurePJT/subj2/frontend/components/Select.js"],"names":["React","PropTypes","ModalDropdown","Block","Text","Icon","nowTheme","DropDown","state","value","handleOnSelect","index","onSelect","props","setState","iconName","iconFamily","iconSize","iconColor","color","textStyle","style","modalStyles","styles","qty","backgroundColor","textStyles","text","dropdown","paddingLeft","fontSize","COLORS","WHITE","Component","propTypes","func","string","number","any","StyleSheet","create","width","DEFAULT","paddingHorizontal","paddingTop","paddingBottom","borderRadius","shadowColor","shadowOffset","height","shadowRadius","shadowOpacity","fontWeight","marginTop","marginLeft"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { StyleSheet } from 'react-native';\r\nimport PropTypes from 'prop-types';\r\nimport ModalDropdown from 'react-native-modal-dropdown';\r\nimport { Block, Text } from 'galio-framework';\r\n\r\nimport Icon from './Icon';\r\nimport { nowTheme } from '../constants';\r\n\r\nclass DropDown extends React.Component {\r\n  state = {\r\n    value: 1\r\n  };\r\n\r\n  handleOnSelect = (index, value) => {\r\n    const { onSelect } = this.props;\r\n\r\n    this.setState({ value: value });\r\n    onSelect && onSelect(index, value);\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      onSelect,\r\n      iconName,\r\n      iconFamily,\r\n      iconSize,\r\n      iconColor,\r\n      color,\r\n      textStyle,\r\n      style,\r\n      ...props\r\n    } = this.props;\r\n\r\n    const modalStyles = [styles.qty, color && { backgroundColor: color }, style];\r\n\r\n    const textStyles = [styles.text, textStyle];\r\n\r\n    return (\r\n      <ModalDropdown\r\n        style={modalStyles}\r\n        onSelect={this.handleOnSelect}\r\n        dropdownStyle={styles.dropdown}\r\n        dropdownTextStyle={{ paddingLeft: 16, fontSize: 12 }}\r\n        {...props}\r\n      >\r\n        <Block flex row middle space=\"between\">\r\n          <Text size={12} style={textStyles}>\r\n            {this.state.value}\r\n          </Text>\r\n          <Icon\r\n            name={iconName || 'minimal-down2x'}\r\n            family={iconFamily || 'NowExtra'}\r\n            size={iconSize || 10}\r\n            color={iconColor || nowTheme.COLORS.WHITE}\r\n          />\r\n        </Block>\r\n      </ModalDropdown>\r\n    );\r\n  }\r\n}\r\n\r\nDropDown.propTypes = {\r\n  onSelect: PropTypes.func,\r\n  iconName: PropTypes.string,\r\n  iconFamily: PropTypes.string,\r\n  iconSize: PropTypes.number,\r\n  color: PropTypes.string,\r\n  textStyle: PropTypes.any\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  qty: {\r\n    width: 100,\r\n    backgroundColor: nowTheme.COLORS.DEFAULT,\r\n    paddingHorizontal: 16,\r\n    paddingTop: 10,\r\n    paddingBottom: 9.5,\r\n    borderRadius: 4,\r\n    shadowColor: 'rgba(0, 0, 0, 0.1)',\r\n    shadowOffset: { width: 0, height: 2 },\r\n    shadowRadius: 4,\r\n    shadowOpacity: 1\r\n  },\r\n  text: {\r\n    color: nowTheme.COLORS.WHITE,\r\n    fontWeight: '600'\r\n  },\r\n  dropdown: {\r\n    marginTop: 8,\r\n    marginLeft: -16,\r\n    width: 100\r\n  }\r\n});\r\n\r\nexport default DropDown;\r\n"]},"metadata":{},"sourceType":"module"}