{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\\\uD2B9\\uD654PJT-sub2-git\\\\frontend\\\\components\\\\Switch.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport nowTheme from \"../constants/Theme\";\n\nvar MkSwitch = function (_React$Component) {\n  _inherits(MkSwitch, _React$Component);\n\n  var _super = _createSuper(MkSwitch);\n\n  function MkSwitch() {\n    _classCallCheck(this, MkSwitch);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(MkSwitch, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          value = _this$props.value,\n          props = _objectWithoutProperties(_this$props, [\"value\"]);\n\n      var thumbColor = Platform.OS === \"ios\" ? nowTheme.COLORS.PRIMARY : Platform.OS === \"android\" && value ? nowTheme.COLORS.SWITCH_ON : nowTheme.COLORS.SWITCH_OFF;\n      return React.createElement(Switch, _extends({\n        value: value,\n        thumbColor: [value === true ? nowTheme.COLORS.SWITCH_ON : '#ffffff'],\n        ios_backgroundColor: \"#D8D8D8\",\n        trackColor: {\n          true: \"#d3d3d3\",\n          false: Platform.OS == \"ios\" ? \"#d3d3d3\" : \"#333\"\n        }\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 7\n        }\n      }));\n    }\n  }]);\n\n  return MkSwitch;\n}(React.Component);\n\nexport default MkSwitch;","map":{"version":3,"sources":["C:/특화PJT-sub2-git/frontend/components/Switch.js"],"names":["React","nowTheme","MkSwitch","props","value","thumbColor","Platform","OS","COLORS","PRIMARY","SWITCH_ON","SWITCH_OFF","true","false","Component"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAGA,OAAOC,QAAP;;IAEMC,Q;;;;;;;;;;;;;6BACK;AAAA,wBACqB,KAAKC,KAD1B;AAAA,UACCC,KADD,eACCA,KADD;AAAA,UACWD,KADX;;AAEP,UAAME,UAAU,GACdC,QAAQ,CAACC,EAAT,KAAgB,KAAhB,GACIN,QAAQ,CAACO,MAAT,CAAgBC,OADpB,GAEIH,QAAQ,CAACC,EAAT,KAAgB,SAAhB,IAA6BH,KAA7B,GACAH,QAAQ,CAACO,MAAT,CAAgBE,SADhB,GAEAT,QAAQ,CAACO,MAAT,CAAgBG,UALtB;AAOA,aACE,oBAAC,MAAD;AACE,QAAA,KAAK,EAAEP,KADT;AAEE,QAAA,UAAU,EAAE,CACVA,KAAK,KAAK,IAAV,GACIH,QAAQ,CAACO,MAAT,CAAgBE,SADpB,GAEG,SAHO,CAFd;AAOE,QAAA,mBAAmB,EAAE,SAPvB;AAQE,QAAA,UAAU,EAAE;AACVE,UAAAA,IAAI,EAAE,SADI;AAEVC,UAAAA,KAAK,EAAEP,QAAQ,CAACC,EAAT,IAAe,KAAf,GAAuB,SAAvB,GAAmC;AAFhC;AARd,SAYMJ,KAZN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF;AAgBD;;;;EA1BoBH,KAAK,CAACc,S;;AA6B7B,eAAeZ,QAAf","sourcesContent":["import React from \"react\";\r\nimport { Switch, Platform } from \"react-native\";\r\n\r\nimport nowTheme from \"../constants/Theme\";\r\n\r\nclass MkSwitch extends React.Component {\r\n  render() {\r\n    const { value, ...props } = this.props;\r\n    const thumbColor =\r\n      Platform.OS === \"ios\"\r\n        ? nowTheme.COLORS.PRIMARY\r\n        : Platform.OS === \"android\" && value\r\n        ? nowTheme.COLORS.SWITCH_ON\r\n        : nowTheme.COLORS.SWITCH_OFF;\r\n\r\n    return (\r\n      <Switch\r\n        value={value}\r\n        thumbColor={[\r\n          value === true\r\n            ? nowTheme.COLORS.SWITCH_ON\r\n            :'#ffffff'\r\n        ]}\r\n        ios_backgroundColor={\"#D8D8D8\"}\r\n        trackColor={{\r\n          true: \"#d3d3d3\",\r\n          false: Platform.OS == \"ios\" ? \"#d3d3d3\" : \"#333\"\r\n        }}\r\n        {...props}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default MkSwitch;\r\n"]},"metadata":{},"sourceType":"module"}